@using ENB.Restaurant.Event.Bookings.Entities;
@model ENB.Restaurant.Event.Bookings.MVC.Models.DisplayBookingEvent
@{
    ViewData["Title"] = "List";

}

<div class="alert alert-primary" role="alert">
    <h2><strong>List Booking Customer : @ViewBag.Message </strong></h2>
</div>
<a asp-action="CreateEvent" id="adddrug_medication" asp-route-CustomerId="@ViewBag.Idcustm" class="btn btn-success text-white" style="margin-bottom:10px"><i class="fa fa-solid fa-book-open"></i> New Booking</a>
<table id="ListBookingTable" class="table table-striped table-bordered" width="100%">
    <thead>
        <tr>
            <th>Id</th>
            <th>Booking N</th>
            <th>Start</th>
            <th>End</th>
            <th>Event Status</th>
            <th>Ref payment</th>
            <th> </th>
        </tr>
    </thead>
</table>

<link href="~/lib/datatable/datatables-1.12.1/css/datatables.bootstrap5.min.css" rel="stylesheet" />

@section scripts{
        <script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-3.5.1.js"></script>
        <script src="~/lib/datatable/datatables-1.12.1/js/jquery.datatables.min.js"></script>
        <script src="~/lib/datatable/datatables-1.12.1/js/datatables.bootstrap5.min.js"></script>
        <script>
        var Popup, datatable, IdCustomer = parseInt('@ViewBag.Idcustm'), Idbook = parseInt('@ViewBag.Idbook')
            $(document).ready(function () {
            datatable = $("#ListBookingTable").DataTable({
                    "ajax": {
                        "url": "/BookingEvent/GetListEvents/?CustomerId=" + IdCustomer + "",
                        "type": "GET",
                        "datatype": "json"
                    },
                    "columns": [

                        { "data": "id" },
                        {
                            "data": "bookingNumber",
                            "width": "150px",
                            "render": function (data, type, row, meta) {
                                return '<b><a href="/BookingEvent/Details/?id=' + row.id + "&CustomerId=" + IdCustomer + '">' + data + '</b></a>';
                            }
                        },
                        { "data": "start", "render": dateFormatter },
                        { "data": "end", "render": dateFormatter },
                        { "data": "eventStatus", "render": event_status },
                        { "data": "payment_Method","render": payment_method },
                        {
                            "data": "id", "render": function (data) {
                                return "<a class= 'btn btn-primary btn-sm text-white' onclick=location.href='@Url.Action("EditEvent","BookingEvent")?id=" + data + "&CustomerId=" + IdCustomer + "'><i class='fas fa-pencil'></i><b> Edit</b></a>" + "\r\n" +
                                       "<a class= 'btn btn-danger btn-sm text-white' style = 'margin-left:5px' onclick =location.href='@Url.Action("Delete","BookingEvent")?id=" + data + "&CustomerId=" + IdCustomer + "'> <i class='fa-solid fa-trash-can' > </i><b> Delete</b > </a> " + "\r\n" +
                                       "<a class= 'btn btn-info btn-sm' style='margin-left:5px' onclick=location.href='@Url.Action("List", "BookingNote")?BookingId=" + data + "&CustomerId=" + IdCustomer + "'><i class='fa-solid fa-bars'></i><b> Booking Note</b> </a>" + "\r\n" +
                                       "<a class= 'btn btn-info btn-sm' style='margin-left:5px' onclick=location.href='@Url.Action("List", "ApartmentBooking")?ApartmentId=" + data + "&Apartment_BuildingId=" + IdCustomer + "'><i class='fa-solid fa-ellipsis-vertical'></i><b> Menu Booking</b> </a>";
                            },
                            "orderable": false,
                            "searchable": false,
                            "width": "430px"
                        }

                    ],
                    "language": {

                        "emptyTable": "No data Found, Please Click On <b>Add New</b> Button"
                    }

                });

            });




            console.log(IdCustomer);


            function dateFormatter(data) {
                var dateAsString = data;

                var yearNumber = dateAsString.substring(0, 4);
                var monthNumber = dateAsString.substring(5, 7);
                var dayNumber = dateAsString.substring(8, 10);
                var dat = dayNumber + "/" + monthNumber + "/" + yearNumber;
                return dat;
            }

            function payment_method(data) {
            var refpay;
            switch (data) {
                case 1:
                    refpay = "Cash"
                    break;
                case 2:
                    refpay = "Credit card"
                    break;
                default:
                // code block
            }
            return refpay
        }

        function event_status(data) {
            var refpay;
            switch (data) {
                case 1:
                    refpay = "Planned"
                    break;
                case 2:
                    refpay = "Confirmed"
                 case 3:
                    refpay = "Changed"
                    break;
                case 4:
                    refpay = "Completed"
                    break;                  
                default:
                // code block
            }
            return refpay
        }


        </script>
    }

