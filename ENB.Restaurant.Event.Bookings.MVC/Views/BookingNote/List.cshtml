@using ENB.Restaurant.Event.Bookings.Entities;
@model IEnumerable<ENB.Restaurant.Event.Bookings.MVC.Models.DisplayBookingNote>
@{
    ViewData["Title"] = "List";

}

<div class="alert alert-primary" role="alert">
    <h2>BookingNotes customer : <strong> @ViewBag.Message <i class="fa-sharp fa-solid fa-user-tie"></i></strong></h2>
</div>
<a asp-action="Create" id="adddrug_medication" asp-controller="BookingNote" asp-route-CustomerId="@ViewBag.Idcustm" asp-route-BookingId="@ViewBag.Idbook" class="btn btn-success text-white" style="margin-bottom:10px"><i class="fas fa-note-sticky"></i> New Booking Note</a>
<table id="BookingNoteTable" class="table table-striped table-bordered" width="100%">
    <thead>
        <tr>
            <th>Id</th>
            <th>Booking Number</th>
            <th>Details_of_notes</th>
            <th>DateCreated</th>
            <th>DateModified</th>
            <th> </th>
        </tr>
    </thead>
</table>

<link href="~/lib/datatable/datatables-1.12.1/css/datatables.bootstrap5.min.css" rel="stylesheet" />

@section scripts{
    <script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="~/lib/datatable/datatables-1.12.1/js/jquery.datatables.min.js"></script>
    <script src="~/lib/datatable/datatables-1.12.1/js/datatables.bootstrap5.min.js"></script>
    <script>
        var Popup, datatable, Idcustm = parseInt('@ViewBag.Idcustm'), Idbook = parseInt('@ViewBag.Idbook')
        $(document).ready(function () {
            datatable = $("#BookingNoteTable").DataTable({
                "ajax": {
                    "url": "/BookingNote/GetBookingNotes/?CustomerId=" + Idcustm + "&BookingId=" + Idbook + "",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [

                    { "data": "id" },
                    {
                        "data": "bookingNumber",
                        "width": "150px",
                        "render": function (data, type, row, meta) {
                            return '<b><a href="/BookingNote/Details/?id=' + row.id + "&CustomerId=" + Idcustm + "&BookingId=" + Idbook +  '">' + data + '</b></a>';
                        }
                    },
                    { "data": "details_of_notes" },
                    { "data": "dateCreated","render":dateFormatter },
                    { "data": "dateModified", "render": dateFormatter },
                    {
                        "data": "id", "render": function (data) {
                            return "<a class= 'btn btn-primary btn-sm text-white' onclick=location.href='@Url.Action("Edit","BookingNote")?id=" + data + "&CustomerId=" + Idcustm + "&BookingId=" + Idbook + "'><i class='fas fa-pencil'></i><b> Edit</b></a>" + "\r\n" +
                                   "<a class= 'btn btn-danger btn-sm text-white' style = 'margin-left:5px' onclick =location.href='@Url.Action("Delete","BookingNote")?id=" + data + "&CustomerId=" + Idcustm + "&BookingId=" + Idbook + "'> <i class='fa-solid fa-trash-can' > </i><b> Delete</b > </a> ";
                        },
                        "orderable": false,
                        "searchable": false,
                        "width": "150px"
                    }

                ],
                "language": {

                    "emptyTable": "No data Found, Please Click On <b>Add New</b> Button"
                }

            });

        });




        console.log(Idcustm);


        function dateFormatter(data) {
            var dateAsString = data;

            var yearNumber = dateAsString.substring(0, 4);
            var monthNumber = dateAsString.substring(5, 7);
            var dayNumber = dateAsString.substring(8, 10);
            var dat = dayNumber + "/" + monthNumber + "/" + yearNumber;
            return dat;
        }

        //function RefpaymentMethode(data) {
        //    var typgen;
        //    switch (data) {
        //        case 1:
        //            typgen = "Filled"
        //            break;
        //        case 2:
        //            typgen = "Part Filled"
        //            break;
        //        case 3:
        //            typgen = "Filled but not collected"
        //            break;
        //        default:
        //        // code block
        //    }
        //    return typgen
        //}

        //function Refprescription_Status(data) {
        //    var typgen;
        //    switch (data) {
        //        case 1:
        //            typgen = "Cash"
        //            break;
        //        case 2:
        //            typgen = "Credit card"
        //            break;
        //        default:
        //        // code block
        //    }
        //    return typgen
        //}

    </script>
    }


